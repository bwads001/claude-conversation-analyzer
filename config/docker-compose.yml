services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: claude-analyzer-db
    environment:
      POSTGRES_DB: conversations
      POSTGRES_USER: claude
      POSTGRES_PASSWORD: claude_analyzer_2024
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/init_db.sql:/docker-entrypoint-initdb.d/01-init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claude -d conversations"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - claude-analyzer

  api:
    build:
      context: ..
      dockerfile: Dockerfile.api
    container_name: claude-analyzer-api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=conversations
      - DB_USER=claude
      - DB_PASSWORD=claude_analyzer_2024
      - OLLAMA_HOST=host.docker.internal:11434
      - OLLAMA_MODEL=nomic-embed-text
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ${CLAUDE_DATA_PATH:-/tmp}:/app/data:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - claude-analyzer

  web:
    build:
      context: ..
      dockerfile: Dockerfile.web
    container_name: claude-analyzer-web
    environment:
      - VITE_API_URL=http://localhost:${BACKEND_PORT:-8000}
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - claude-analyzer

networks:
  claude-analyzer:
    driver: bridge

volumes:
  postgres_data:
    driver: local